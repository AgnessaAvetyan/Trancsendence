{"ast":null,"code":"import _slicedToArray from \"/Users/agnesaavetyan/Desktop/transcendence/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/agnesaavetyan/Desktop/transcendence/src/AccountPage.tsx\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nvar AccountPage = function AccountPage() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuthorized = _useState2[0],\n    setIsAuthorized = _useState2[1];\n  var navigate = useNavigate();\n  var handleAuthorize = function handleAuthorize() {\n    // Call your authentication API or perform your authorization logic here\n    // If the user is authorized, set the isAuthorized state to true\n    setIsAuthorized(true);\n    console.log(333);\n    // Navigate to another page\n    navigate('/profile');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, !isAuthorized && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAuthorize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Authorize\"));\n};\nexport default AccountPage;","map":{"version":3,"names":["React","useState","useNavigate","AccountPage","isAuthorized","setIsAuthorized","navigate","handleAuthorize","console","log"],"sources":["/Users/agnesaavetyan/Desktop/transcendence/src/AccountPage.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nconst AccountPage:React.FC = () => {\n\n      const [isAuthorized, setIsAuthorized] = useState(false);\n      const navigate = useNavigate();\n    \n      const handleAuthorize = () => {\n        // Call your authentication API or perform your authorization logic here\n        // If the user is authorized, set the isAuthorized state to true\n        setIsAuthorized(true);\n        console.log(333)\n        // Navigate to another page\n        navigate('/profile');\n      };\n    \n      return (\n        <div>\n          {!isAuthorized && (\n            <button onClick={handleAuthorize}>Authorize</button>\n          )}\n        </div>\n      );\n    }\n\nexport default AccountPage;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,WAAoB,GAAG,SAAvBA,WAAoB,GAAS;EAAA,gBAEWF,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhDG,YAAY;IAAEC,eAAe;EACpC,IAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAE9B,IAAMK,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC5B;IACA;IACAF,eAAe,CAAC,IAAI,CAAC;IACrBG,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChB;IACAH,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;EAED,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACF,YAAY,iBACZ;IAAQ,OAAO,EAAEG,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,WAAS,CAC5C,CACG;AAEV,CAAC;AAEL,eAAeJ,WAAW"},"metadata":{},"sourceType":"module"}