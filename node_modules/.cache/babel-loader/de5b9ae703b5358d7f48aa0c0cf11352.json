{"ast":null,"code":"// import React, {useState} from \"react\";\n// import { useNavigate } from 'react-router-dom';\n\n// const AccountPage:React.FC = () => {\n\n//       const [isAuthorized, setIsAuthorized] = useState(false);\n//       const navigate = useNavigate();\n\n//       const handleAuthorize = () => {\n//         // Call your authentication API or perform your authorization logic here\n//         // If the user is authorized, set the isAuthorized state to true\n//         setIsAuthorized(true);\n\n//         // Navigate to another page\n//         navigate('/dashboard');\n//       };\n\n//       return (\n//         <div>\n//           {!isAuthorized && (\n//             <button onClick={handleAuthorize}>Authorize</button>\n//           )}\n//         </div>\n//       );\n//     }\n\n// export default AccountPage;","map":{"version":3,"names":[],"sources":["/Users/agnesaavetyan/Desktop/transcendence/src/AccountPage.tsx"],"sourcesContent":["// import React, {useState} from \"react\";\n// import { useNavigate } from 'react-router-dom';\n\n// const AccountPage:React.FC = () => {\n\n//       const [isAuthorized, setIsAuthorized] = useState(false);\n//       const navigate = useNavigate();\n    \n//       const handleAuthorize = () => {\n//         // Call your authentication API or perform your authorization logic here\n//         // If the user is authorized, set the isAuthorized state to true\n//         setIsAuthorized(true);\n    \n//         // Navigate to another page\n//         navigate('/dashboard');\n//       };\n    \n//       return (\n//         <div>\n//           {!isAuthorized && (\n//             <button onClick={handleAuthorize}>Authorize</button>\n//           )}\n//         </div>\n//       );\n//     }\n\n// export default AccountPage;"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}